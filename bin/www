#!/usr/bin/env node
const PORT = 8081;

const ws = require('ws');
const https = require('https');
const app = require('../src/app');
const fs = require('fs');
const path = require('path');

//根据项目的路径导入生成的证书文件
let privateKey  = fs.readFileSync(path.join(__dirname, './certificate/ssl.key'), 'utf8');
let certificate = fs.readFileSync(path.join(__dirname, './certificate/ssl.crt'), 'utf8');
let credentials = {key: privateKey, cert: certificate};

const server = https.createServer(credentials,app);
const wss = new ws.Server({server});
const SQL = require('../src/sql');
let mysql = new SQL('mysql', {
    password: 'jonle234517',
    database: 'websocket'
});

let router = require('../src/router');
let user = require('../src/user');
wss.on('connection', (socket) => {
    socket.on('message', (data) => {
        let userData = JSON.parse(data);
        socket.userData = userData;
        if (userData.eventType.match(/sign/gi)) {
            router.connectSql(mysql, socket).then((userId) => {
                socket.userId = userId;
                user.addUser(socket);
            });
        } else if (userData.eventType === 'login') {
            router.broadcast(wss, 'login', socket);
        } else if (userData.eventType === 'message') {
            router.broadcast(wss, 'message', socket);
        }
    });
    socket.on('close', (event) => {
        console.log(event);
        router.broadcast(wss, 'logout', socket);
        user.deleteUser(socket);
    });
});

server.listen(PORT);